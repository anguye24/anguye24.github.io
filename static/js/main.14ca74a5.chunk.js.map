{"version":3,"sources":["assets/images/andrew.png","components/about/AboutStyles.js","components/question/QuestionStyles.js","components/question/index.js","components/question/Question.js","components/answer/AnswerStyles.js","components/answer/index.js","components/answer/Answer.js","components/heading/HeadingStyles.js","components/heading/index.js","components/heading/Heading.js","components/about/About.js","components/grid-component/index.js","components/drop-down/DropDownMenu.js","components/grid-component/GridComponent.js","components/header/HeaderStyles.js","components/header/index.js","components/header/Header.js","components/job/JobStyles.js","components/layout/index.js","components/job/Job.js","components/layout/Layout.js","components/page-divider/PageDividerStyles.js","components/page-divider/index.js","components/page-divider/PageDivider.js","containers/home-container/HomeContainerStyles.js","containers/home-container/index.js","containers/home-container/HomeContainer.js","assets/constants/home-constants.js","assets/constants/grid-constants.js","containers/app-container/index.js","containers/app-container/AppContainer.js","assets/theme.js","assets/colors.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","BodyWrapper","_templateObject2","QuestionText","span","QuestionStyles_templateObject","props","theme","grey","Question","questionText","react_default","a","createElement","AnswerText","AnswerStyles_templateObject","mainTextColor","Answer","answerText","HeadingWrapper","HeadingStyles_templateObject","HeadingText","HeadingStyles_templateObject2","mainColor","Heading","headingTitle","Component","GridComponent","_this$props","this","gridTitle","Icon","heading","description","heading2","description2","className","iconContext","Provider","value","color","Header","HeaderStyles_templateObject","HeaderTitle","HeaderStyles_templateObject2","HeaderStyles_Header","JobStyles_templateObject","JobStyles_templateObject2","Layout","children","header","React","PageDividerStyles_templateObject","PageDividerStyles_templateObject2","mainFont","Description","_templateObject3","GridWrapper","_templateObject4","PageDivider","pageDividerHeaderText","pageDividerText","PageDividerStyles_Wrapper","PageDividerStyles_HeaderTitle","HomeWrapper","HomeContainerStyles_templateObject","Hero","HomeContainerStyles_templateObject2","HomeContainerStyles_templateObject3","HeaderDescription","HomeContainerStyles_templateObject4","HeaderImage","img","_templateObject5","ImageWrapper","_templateObject6","GithubIcon","FaGithub","_templateObject7","LinkedInIcon","FaLinkedin","_templateObject8","HomeContainer","layout","HomeContainerStyles_HeaderTitle","src","Avatar","alt","href","target","size","page_divider","grid_component","md","go","AppContainer","HashRouter","Switch","Route","exact","path","component","Routes","GlobalStyle","createGlobalStyle","App_templateObject","App","Fragment","styled_components_browser_esm","app_container","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.14ca74a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/andrew.a8f6cea1.png\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: baseline;\n  border-bottom: 1px solid #e8e8e8;\n`;\n\nexport const BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n`;\n","import styled from \"styled-components\";\n\nexport const QuestionText = styled.span`\n  font-family: \"OpenSans-Bold\", sans-serif;\n  font-size: 25px;\n  font-weight: 400;\n  color: ${props => props.theme.grey};\n`;\n","import Question from \"./Question\";\n\nexport default Question;\n","import React from \"react\";\nimport * as S from \"./QuestionStyles\";\n\nconst Question = props => {\n  const { questionText } = props;\n  return <S.QuestionText>{questionText}</S.QuestionText>;\n};\n\nexport default Question;\n","import styled from \"styled-components\";\n\nexport const AnswerText = styled.p`\n  font-family: \"OpenSans-Regular\", sans-serif;\n  font-size: 15px;\n  line-height: 30px;\n  color: ${props => props.theme.mainTextColor};\n  margin-bottom: 30px;\n  overflow-wrap: break-word;\n`;\n","import Answer from \"./Answer\";\n\nexport default Answer;\n","import React from \"react\";\nimport * as S from \"./AnswerStyles\";\n\nconst Answer = props => {\n  const { answerText } = props;\n  return <S.AnswerText>{answerText}</S.AnswerText>;\n};\n\nexport default Answer;\n","import styled from \"styled-components\";\n\nexport const HeadingWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: flex-start;\n  @media screen and (max-width: 568px) {\n    justify-content: center;\n  }\n`;\n\nexport const HeadingText = styled.span`\n  color: ${props => props.theme.grey};\n  font-family: \"OpenSans-Bold\", sans-serif;\n  font-size: 18px;\n  letter-spacing: 1px;\n  font-weight: 400;\n  border-bottom: 3px solid ${props => props.theme.mainColor};\n  padding-bottom: 6px;\n`;\n","import Heading from \"./Heading\";\n\nexport default Heading;\n","import React from \"react\";\nimport * as S from \"./HeadingStyles\";\n\nconst Heading = props => {\n  const { headingTitle } = props;\n  return (\n    <S.HeadingWrapper>\n      <S.HeadingText>{headingTitle}</S.HeadingText>\n    </S.HeadingWrapper>\n  );\n};\n\nexport default Heading;\n","import React, { Component } from \"react\";\nimport * as S from \"./AboutStyles\";\nimport Question from \"../question\";\nimport Answer from \"../answer\";\nimport Heading from \"../heading\";\n\nclass About extends Component {\n  render() {\n    const { questionOne, answerOne, questionTwo, answerTwo } = this.props;\n    return (\n      <S.Wrapper>\n        <Heading headingTitle=\"ABOUT THEM\" />\n        <S.BodyWrapper>\n          <Question questionText={questionOne} />\n          <Answer answerText={answerOne} />\n          <Question questionText={questionTwo} />\n          <Answer answerText={answerTwo} />\n        </S.BodyWrapper>\n      </S.Wrapper>\n    );\n  }\n}\n\nexport default About;\n","import GridComponent from \"./GridComponent\";\n\nexport default GridComponent;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { IoMdArrowDropdown } from \"react-icons/io\";\nimport \"./DropDownMenu.css\";\n\nclass DropDownMenu extends Component {\n  state = {\n    isOpen: false\n  };\n  showMenu = event => {\n    event.preventDefault();\n\n    this.setState({ isOpen: true }, () => {\n      document.addEventListener(\"click\", this.closeMenu);\n    });\n  };\n  closeMenu = () => {\n    this.setState({ isOpen: false }, () => {\n      document.removeEventListener(\"click\", this.closeMenu);\n    });\n  };\n  render() {\n    const { isOpen } = this.state;\n    const { btnText } = this.props;\n    return (\n      <div className=\"drop-down-menu\">\n        <button onClick={this.showMenu} className=\"drop-down-menu__button\">\n          <span>{btnText}</span>\n          <IoMdArrowDropdown size={32} color={\"#fff\"} />\n        </button>\n        {isOpen && (\n          <div className=\"drop-down-menu__menu\">\n            <NavLink\n              className=\"drop-down-menu__navlink\"\n              to=\"/work-term-report/ecobee\"\n            >\n              <div className=\"drop-down-menu__menu__menu-item-wrapper\">\n                <span className=\"drop-down-menu__menu__menu-item\">ecobee</span>\n              </div>\n            </NavLink>\n            <NavLink\n              className=\"drop-down-menu__navlink\"\n              to=\"/work-term-report/intrigue-media\"\n            >\n              <div className=\"drop-down-menu__menu__menu-item-wrapper\">\n                <span className=\"drop-down-menu__menu__menu-item\">\n                  Intrigue Media\n                </span>\n              </div>\n            </NavLink>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DropDownMenu;\n","import React, { Component } from \"react\";\nimport { IconContext } from \"react-icons\";\nimport \"./GridComponent.css\";\n\nclass GridComponent extends Component {\n  render() {\n    const {\n      gridTitle,\n      Icon,\n      heading,\n      description,\n      heading2,\n      description2\n    } = this.props;\n\n    return (\n      <div className=\"grid-component\">\n        <IconContext.Provider\n          value={{\n            color: \"#ff4242\",\n            className: \"grid-component__icons\"\n          }}\n        >\n          <div>{Icon}</div>\n        </IconContext.Provider>\n        <h1 className=\"grid-component__title\">{gridTitle}</h1>\n        <div className=\"grid-component__description\">\n          <span className=\"grid-component__heading\">{heading}</span>\n          <span className=\"grid-component__answer\">{description}</span>\n        </div>\n        <div className=\"grid-component__description\">\n          <span className=\"grid-component__heading\">{heading2}</span>\n          <span className=\"grid-component__answer\">{description2}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GridComponent;\n","import styled from \"styled-components\";\n\nexport const Header = styled.div`\n  height: 60px;\n  background-color: #ff4242;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const HeaderTitle = styled.span`\n  margin-left: 20px;\n  color: #fff;\n  font-size: 22px;\n  font-family: \"Eurostile\";\n`;\n\n// @font-face {\n//     font-family: 'Eurostile';\n//     src: local('Eurostile'), url(../../assets/fonts/Eurostile.ttf) format('truetype');\n// }\n","import Header from \"./Header\";\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport * as S from \"./HeaderStyles\";\n\nconst Header = () => (\n  <S.Header>\n    <S.HeaderTitle>Andrew Nguyen</S.HeaderTitle>\n  </S.Header>\n);\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 840px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-evenly;\n  border-bottom: 1px solid #e8e8e8;\n`;\n\nexport const BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n`;\n","import Layout from \"./Layout\";\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport * as S from \"./JobStyles\";\nimport Question from \"../question\";\nimport Answer from \"../answer\";\nimport Heading from \"../heading\";\n\nclass Job extends Component {\n  render() {\n    const {\n      questionOne,\n      questionTwo,\n      answerOne,\n      answerTwo,\n      answerThree\n    } = this.props;\n    return (\n      <S.Wrapper>\n        <Heading headingTitle=\"JOB\" />\n        <S.BodyWrapper>\n          <Question questionText={questionOne} />\n          <Answer answerText={answerOne} />\n          <Question questionText={questionTwo} />\n          <Answer answerText={answerTwo} />\n          <Answer answerText={answerThree} />\n        </S.BodyWrapper>\n      </S.Wrapper>\n    );\n  }\n}\n\nexport default Job;\n","import React from \"react\";\nimport Header from \"../header\";\nimport \"./Layout.css\";\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"layout\">\n        <Header />\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  background-color: ${props => props.theme.mainColor};\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  border: solid 1px black;\n  border-radius: 6px;\n`;\n\nexport const HeaderTitle = styled.span`\n  color: #fff;\n  font-family: ${props => props.theme.mainFont};\n  margin-top: 75px;\n  margin-bottom: 25px;\n  text-align: center;\n  font-size: 40px;\n`;\n\nexport const Description = styled.span`\n  max-width: 600px;\n  font-family: ${props => props.theme.mainFont};\n  font-size: 18px;\n  text-align: center;\n  line-height: 1.4;\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: #fff;\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const GridWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  @media screen and (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 15px;\n  }\n`;\n","import PageDivider from \"./PageDivider\";\n\nexport default PageDivider;\n","import React, { Component } from \"react\";\nimport * as S from \"./PageDividerStyles\";\n\nclass PageDivider extends Component {\n  render() {\n    const { pageDividerHeaderText, pageDividerText, children } = this.props;\n    return (\n      <S.Wrapper>\n        <S.HeaderTitle>{pageDividerHeaderText}</S.HeaderTitle>\n        <S.Description>{pageDividerText}</S.Description>\n        <S.GridWrapper>{children}</S.GridWrapper>\n      </S.Wrapper>\n    );\n  }\n}\n\nexport default PageDivider;\n","import styled from \"styled-components\";\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\n\nexport const HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n  justify-content: space-between;\n`;\n\nexport const Hero = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin: 30px 0;\n\n  @media screen and (max-width: 568px) {\n    margin-top: 15%;\n    margin-bottom: 15%;\n  }\n`;\n\nexport const HeaderTitle = styled.span`\n  font-family: ${props => props.theme.mainFont};\n  font-size: 40px;\n  font-weight: 500;\n  margin-bottom: 24px;\n  text-align: center;\n\n  @media screen and (max-width: 568px) {\n    font-size: 20px;\n    text-align: center;\n  }\n`;\n\nexport const HeaderDescription = styled.span`\n  font-family: ${props => props.theme.mainFont};\n  margin: 0;\n  font-size: 20px;\n  text-align: center;\n  max-width: 400px;\n  margin-bottom: 45px;\n`;\n\nexport const HeaderImage = styled.img`\n  border-radius: 50%;\n  margin-bottom: 5px;\n`;\n\nexport const ImageWrapper = styled.div`\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const GithubIcon = styled(FaGithub)`\n  a:hover & {\n    fill: ${props => props.theme.mainColor};\n  }\n`;\n\nexport const LinkedInIcon = styled(FaLinkedin)`\n  a:hover & {\n    fill: ${props => props.theme.mainColor};\n  }\n`;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { Component } from \"react\";\nimport { MdCode } from \"react-icons/md\";\nimport { IconContext } from \"react-icons\";\nimport { GoRocket } from \"react-icons/go\";\nimport Avatar from \"../../assets/images/andrew.png\";\nimport { PageDivider, GridComponent, Layout } from \"../../components\";\nimport * as GridConstants from \"../../assets/constants/grid-constants\";\nimport * as HomeConstants from \"../../assets/constants/home-constants\";\nimport * as S from \"./HomeContainerStyles\";\n\nclass HomeContainer extends Component {\n  render() {\n    return (\n      <Layout>\n        <S.HomeWrapper>\n          <S.Hero>\n            <S.HeaderTitle>{HomeConstants.title}</S.HeaderTitle>\n            <S.HeaderDescription>{HomeConstants.text}</S.HeaderDescription>\n            <S.HeaderImage src={Avatar} alt=\"\" />\n            <IconContext.Provider\n              value={{ color: \"black\", className: \"header__icons\" }}\n            >\n              <S.ImageWrapper>\n                <a href=\"https://github.com/naguigui\" target=\"_blank\">\n                  <S.GithubIcon size={32} />\n                </a>\n                <a\n                  href=\"https://www.linkedin.com/in/andrew-vo-nguyen/\"\n                  target=\"_blank\"\n                >\n                  <S.LinkedInIcon size={32} />\n                </a>\n              </S.ImageWrapper>\n            </IconContext.Provider>\n          </S.Hero>\n          <PageDivider\n            pageDividerHeaderText={HomeConstants.pageDividerHeaderText}\n            pageDividerText={HomeConstants.pageDividerText}\n          >\n            <GridComponent\n              Icon={<MdCode size={42} />}\n              gridTitle={GridConstants.gridTitle}\n              heading={GridConstants.devHeading}\n              description={GridConstants.devDescription}\n              heading2={GridConstants.devHeading2}\n              description2={GridConstants.devDescription2}\n            />\n            <GridComponent\n              Icon={<GoRocket size={42} />}\n              gridTitle={GridConstants.gridTitle2}\n              heading={GridConstants.hobbyHeading}\n              description={GridConstants.hobbyDescription}\n              heading2={GridConstants.hobbyHeading2}\n              description2={GridConstants.hobbyDescription2}\n            />\n          </PageDivider>\n        </S.HomeWrapper>\n      </Layout>\n    );\n  }\n}\n\nexport default HomeContainer;\n","export const title = \"Software Developer, Life-long Learner.\";\nexport const text = \"Hi, I like to write cool things with JS\";\nexport const pageDividerHeaderText = \"A little bit about myself.\";\nexport const pageDividerText =\n  \"I'm currently working as a Full-Stack Web Developer for a company based out in Toronto called ecobee which is pretty cool. Outside of work I went to school at the University of Guelph majoring in Computer Science.\";\n","export const gridTitle = \"Engineer\";\nexport const gridTitle2 = \"Hobbies\";\n\nexport const devHeading = \"Things I like to work on:\";\nexport const devDescription = \"Web and native applications!\";\n\nexport const devHeading2 = \"Technologies I like to use:\";\nexport const devDescription2 = \"React/React Native, Node, Redux, GraphQL\";\n\nexport const hobbyHeading = \"Things I like to do outside of coding:\";\nexport const hobbyDescription = \"Dancing, Eating, and Ping Pong!!\";\n\nexport const hobbyHeading2 = \"What kind of dancing?\";\nexport const hobbyDescription2 = \"Urban Hip Hop, Breaking, and House\";\n","import AppContainer from \"./AppContainer\";\n\nexport default AppContainer;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as Routes from \"../\";\n\nconst AppContainer = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Routes.HomeContainer} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppContainer;\n","import { MAIN_COLOR, MAIN_TEXT_COLOR, GREY } from \"./colors\";\n\nconst theme = {\n  mainColor: MAIN_COLOR,\n  mainFont: \"Apercu\",\n  mainTextColor: MAIN_TEXT_COLOR,\n  grey: GREY\n};\n\nexport default theme;\n","export const MAIN_COLOR = \"#ff4242\";\nexport const GREY = \"#313131\";\nexport const MAIN_TEXT_COLOR = \"838c95\";\n","import React from \"react\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport AppContainer from \"./containers/app-container\";\nimport theme from \"./assets/theme\";\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Eurostile';\n    src: local('Eurostile'), url(./assets/fonts/Eurostile.ttf) format('truetype');\n  }\n  @font-face {\n    font-family: 'Apercu';\n    src: local('Apercu'), url(./assets/fonts/Apercu.ttf) format('truetype');\n  }\n`;\n\nconst App = () => (\n  <React.Fragment>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>\n      <AppContainer />\n    </ThemeProvider>\n  </React.Fragment>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./assets/globalStyles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}